{"version":3,"sources":["Calculator/Keyboard/Keyboard.styles.js","Calculator/Keyboard/index.js","Calculator/Keyboard/Keyboard.jsx","Calculator/Display/Display.styles.js","Calculator/Display/index.js","Calculator/Display/Display.jsx","Calculator/Calculator.jsx","Calculator/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","keyboard","display","flexWrap","padding","width","height","margin","fontSize","fontWeight","numberKeys","maxWidth","backgroundColor","OperatorKeys","Keyboard","addImput","backSpace","addOperator","resetAll","getResult","cls","Box","className","map","el","index","Button","id","variant","color","value","onClick","displayView","spacing","border","borderRadius","fontFamily","wordWrap","inputView","textAlign","minHeight","calcView","resultView","errorResult","Display","calc","input","result","Typography","regexOperator","fixMultiply","string","replace","isLastCharOperator","temp","test","charAt","length","Calculator","useState","setInput","setCalc","setResult","keyboardProps","event","currentTarget","includes","concat","isNaN","Number","changeOperator","slice","substring","number","joinLastInput","preCompute","withOutLastChar","Function","error","compute","Math","round","EPSILON","displayProps","Paper","elevation","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.80f4e120.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  keyboard: {\r\n    display: 'flex',\r\n    flexWrap: 'nowrap',\r\n    padding: '0 2px 2px',\r\n    '& button': {\r\n      width: 80,\r\n      height: 80,\r\n      margin: '2px 1px 0px 0px',\r\n      fontSize: 28,\r\n      fontWeight: 'bold'\r\n    }\r\n  },\r\n  numberKeys: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    maxWidth: 243,\r\n    '& .MuiButton-containedSecondary': {\r\n      backgroundColor: '#457b9d',\r\n      '&:hover': {\r\n        backgroundColor: '#6399BB'\r\n      }\r\n    },\r\n    '& #key-9, #key-10': {\r\n      width: 120\r\n    }\r\n  },\r\n  OperatorKeys: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    maxWidth: 162,\r\n    '& .MuiButton-containedPrimary': {\r\n      backgroundColor: '#2E548A',\r\n      '&:hover': {\r\n        backgroundColor: '#3D70B8'\r\n      }\r\n    },\r\n    '& #clearAll': {\r\n      backgroundColor: '#e63946',\r\n      '&:hover': {\r\n        backgroundColor: '#EB5C68'\r\n      }\r\n    },\r\n    '& #equalKey': {\r\n      width: 160,\r\n      backgroundColor: '#049F76',\r\n      '&:hover': {\r\n        backgroundColor: '#05C793'\r\n      }\r\n    }\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import Keyboard from './Keyboard'\r\n\r\nexport default Keyboard\r\n","import React from 'react'\r\nimport { Box, Button } from '@material-ui/core'\r\nimport BackspaceIcon from '@material-ui/icons/Backspace'\r\nimport useStyles from './Keyboard.styles'\r\n\r\nexport default function Keyboard({\r\n  addImput,\r\n  backSpace,\r\n  addOperator,\r\n  resetAll,\r\n  getResult\r\n}) {\r\n  const cls = useStyles()\r\n  return (\r\n    <Box className={cls.keyboard}>\r\n      <Box className={cls.numberKeys}>\r\n        {[7, 8, 9, 4, 5, 6, 1, 2, 3, 0, '.'].map((el, index) => (\r\n          <Button\r\n            id={`key-${index}`}\r\n            key={`key-${index}`}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            value={el}\r\n            onClick={addImput}>\r\n            {el}\r\n          </Button>\r\n        ))}\r\n      </Box>\r\n      <Box className={cls.OperatorKeys}>\r\n        <Button\r\n          id=\"clearAll\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={resetAll}>\r\n          C\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={backSpace}>\r\n          <BackspaceIcon />\r\n        </Button>\r\n        {['+', '-', 'x', '/'].map((el, index) => (\r\n          <Button\r\n            key={`optr-key-${index}`}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            value={el}\r\n            onClick={addOperator}>\r\n            {el}\r\n          </Button>\r\n        ))}\r\n        <Button\r\n          id=\"equalKey\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={getResult}>\r\n          =\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  displayView: {\r\n    maxWidth: 410,\r\n    backgroundColor: '#333',\r\n    padding: theme.spacing(1),\r\n    color: 'white',\r\n    border: '2px solid #f1faee',\r\n    borderRadius: 5,\r\n    '& .MuiTypography-root': {\r\n      fontFamily: `'Roboto Mono', monospace`,\r\n      fontWeight: 500,\r\n      wordWrap: 'break-word'\r\n    }\r\n  },\r\n  inputView: {\r\n    textAlign: 'right',\r\n    fontSize: '30px',\r\n    minHeight: 45\r\n  },\r\n  calcView: {\r\n    minHeight: 35,\r\n    fontSize: '20px'\r\n  },\r\n  resultView: {\r\n    minHeight: 42,\r\n    color: '#81c784',\r\n    textAlign: 'right',\r\n    fontSize: '28px'\r\n  },\r\n  errorResult: {\r\n    minHeight: 42,\r\n    color: '#e63946',\r\n    textAlign: 'right',\r\n    fontSize: '28px'\r\n  }\r\n}))\r\n\r\nexport default useStyles\r\n","import Display from './Display'\r\n\r\nexport default Display\r\n","import { Box, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport useStyles from './Display.styles'\r\n\r\nexport default function Display({ calc, input, result }) {\r\n  const cls = useStyles()\r\n  return (\r\n    <Box className={cls.displayView}>\r\n      <Typography className={cls.calcView}>{calc}</Typography>\r\n      <Typography className={cls.inputView}>{input}</Typography>\r\n      <Typography\r\n        className={result === 'Error' ? cls.errorResult : cls.resultView}>\r\n        {result}\r\n      </Typography>\r\n    </Box>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Paper } from '@material-ui/core'\r\nimport Keyboard from './Keyboard'\r\nimport Display from './Display'\r\n\r\n// ############ START UTILITIES ############################\r\n\r\n// Operator regex\r\nconst regexOperator = /([+\\-/*])/\r\n\r\n// Remplace x for *\r\nconst fixMultiply = (string) => string.replace(/x/g, '*')\r\n\r\n// check if last char is an operator\r\nconst isLastCharOperator = (string) => {\r\n  const temp = fixMultiply(string)\r\n  return regexOperator.test(temp.charAt(temp.length - 1))\r\n}\r\n\r\n// round results\r\nconst round = (number) =>\r\n  typeof number === 'number'\r\n    ? Math.round((number + Number.EPSILON) * 100) / 100\r\n    : number\r\n\r\n// with Errors\r\nconst withError = (string) => isNaN(Number(string))\r\n\r\n// Eval alternative\r\nconst compute = (string) => {\r\n  // remplace x with *\r\n  const preCompute = fixMultiply(string)\r\n  // zero devided by zero\r\n  if (/(0\\/0)$/.test(preCompute)) {\r\n    return 'Resultado indefinido'\r\n  }\r\n  // no division by zero\r\n  if (/(\\d+\\/0)$/.test(preCompute)) {\r\n    return 'No existe divicion por cero'\r\n  }\r\n  // no 0/.0...\r\n  if (/^(0\\/\\.0+)/.test(preCompute)) return 'Error'\r\n  // no 0/.\r\n  if (/^(0\\/\\.)$/.test(preCompute)) return 'Error'\r\n  // 0 devided always 0\r\n  if (/^(0\\/)/.test(preCompute)) return '0'\r\n\r\n  try {\r\n    if (isLastCharOperator(preCompute)) {\r\n      const withOutLastChar = preCompute.substring(0, preCompute.length - 1)\r\n      // eslint-disable-next-line\r\n      return Function(`'use strict'; return (${withOutLastChar})`)()\r\n    }\r\n    // eslint-disable-next-line\r\n    return Function(`'use strict'; return (${preCompute})`)()\r\n  } catch (error) {\r\n    return 'Error'\r\n  }\r\n}\r\n\r\n// ############ END UTILITIES ############################\r\n\r\nfunction Calculator() {\r\n  const [input, setInput] = useState('0')\r\n  const [calc, setCalc] = useState('')\r\n  const [result, setResult] = useState('')\r\n\r\n  const addImput = (event) => {\r\n    // if result reset all\r\n    if (!!result) resetAll()\r\n    if (input === '0') return setInput(event.currentTarget.value)\r\n    if (input.includes('.') && event.currentTarget.value === '.') return null\r\n    return setInput(input.concat(event.currentTarget.value))\r\n  }\r\n\r\n  const backSpace = () => {\r\n    return input\r\n      ? setInput(input.substring(0, input.length - 1))\r\n      : setCalc(calc.substring(0, calc.length - 1))\r\n  }\r\n\r\n  const addOperator = (event) => {\r\n    // if result error reset and return 0+operator\r\n    if (withError(result)) {\r\n      setResult('')\r\n      return setCalc('0' + event.currentTarget.value)\r\n    }\r\n\r\n    // continue concat from last result\r\n    if (!!result) {\r\n      setCalc(result + event.currentTarget.value)\r\n      setInput('')\r\n      return setResult('')\r\n    }\r\n\r\n    // change last operator\r\n    if (isLastCharOperator(calc) && input === '') {\r\n      let changeOperator = calc.slice(0, -1).concat(event.currentTarget.value)\r\n      return setCalc(changeOperator)\r\n    }\r\n\r\n    setCalc(calc + input + event.currentTarget.value)\r\n    return setInput('')\r\n  }\r\n\r\n  const getResult = () => {\r\n    // concat last input and clear\r\n    const joinLastInput = calc.concat(input)\r\n    setCalc(joinLastInput)\r\n    setInput('')\r\n    return setResult(round(compute(joinLastInput)))\r\n  }\r\n\r\n  const resetAll = () => {\r\n    setInput('0')\r\n    setCalc('')\r\n    setResult('')\r\n  }\r\n\r\n  const keyboardProps = {\r\n    addImput,\r\n    addOperator,\r\n    backSpace,\r\n    getResult,\r\n    resetAll\r\n  }\r\n\r\n  const displayProps = {\r\n    input,\r\n    calc,\r\n    result\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={2}>\r\n      <Display {...displayProps} />\r\n      <Keyboard {...keyboardProps} />\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Calculator\r\n","import Calculator from './Calculator'\r\n\r\nexport default Calculator\r\n","import './App.css'\nimport Calculator from './Calculator'\n\nfunction App() {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <Calculator />\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}